{"version":3,"sources":["images/logo-mesto.svg","images/pencil-avatar.svg","images/iv-custo.jpg","components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/Loader.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","Logo","alt","api","baseUrl","headers","this","_baseUrl","_headers","fetch","then","res","ok","json","Promise","reject","status","_promises","getUserInfo","getInitialCards","all","name","job","method","body","JSON","stringify","about","link","itemId","avatar","authorization","Card","card","onCardClick","onTrashClick","type","onClick","title","Main","onEditProfile","onAddPlace","onEditAvatar","React","useState","userName","setUserName","userDescription","setUserDescription","UserAvatar","userAvatar","setUserAvatar","cards","setCards","useEffect","getInitialInfo","userInfo","initialCards","items","map","item","catch","err","console","log","style","backgroundImage","PencilAvatar","i","key","Footer","PopupWithForm","isOpen","loader","onClose","children","action","noValidate","ImagePopup","Loader","App","props","closeAllPopups","setChangeAvatarPopupOpen","setEditProfilePopupOpen","setAddImagePopupOpen","setTrashPopupOpen","setSelectedCard","isEditProfilePopupOpen","isAddImagePopupOpen","isChangeAvatarPopupOpen","setIsOpen","selectedCard","isTrashPopupOpen","id","placeholder","minLength","maxLength","required","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.0155e2b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-mesto.e889e45f.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil-avatar.34c46850.svg\";","module.exports = __webpack_public_path__ + \"static/media/iv-custo.610cd79a.jpg\";","import React from 'react';\r\nimport Logo from '../images/logo-mesto.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header page__container\">\r\n            <img className=\"header__logo\" src={Logo} alt=\"Логотип Mesto-Russia\" />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","class Api {\r\n    constructor({ baseUrl, headers }) {\r\n        this._baseUrl = baseUrl;\r\n        this._headers = headers;\r\n    }\r\n\r\n    getUserInfo() { // Запрос на загрузку данных пользователя\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            headers: this._headers\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n\r\n    getInitialCards() { // Запрос на загрузку карточек\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n            headers: this._headers\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n\r\n    getInitialInfo() {\r\n        this._promises = [this.getUserInfo(), this.getInitialCards()];\r\n        return Promise.all(this._promises);\r\n    }\r\n\r\n    setUserInfo({ name, job }) { // Запрос на обновление данных пользователя\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: `${name}`,\r\n                about: `${job}`\r\n            })\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n\r\n    addNewCard([{ name, link }]) { // Запрос на добавление новой карточки\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: `${name}`,\r\n                link: `${link}`\r\n            })\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n\r\n    deleteCard(itemId) { // Запрос на удаление карточки\r\n        return fetch(`${this._baseUrl}/cards/${itemId}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n\r\n    setUserAvatar({ avatar }) { // Запрос на изменение аватара пользователя\r\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: `${avatar}`\r\n            })\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n\r\n    addLikeCard(itemId) { // Запрос на установку лайка\r\n        return fetch(`${this._baseUrl}/cards/likes/${itemId}`, {\r\n            method: 'PUT',\r\n            headers: this._headers\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n\r\n    removeLikeCard(itemId) { // Запрос на снятие лайка\r\n        return fetch(`${this._baseUrl}/cards/likes/${itemId}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n}\r\n\r\nexport const api = new Api({\r\n    baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-14\",\r\n    headers: {\r\n        authorization: \"cede3324-4ffe-44e5-b1e3-3ccfef967867\",\r\n        \"Content-Type\": \"application/json\",\r\n    },\r\n});","import React from 'react';\r\n\r\nfunction Card({ card, onCardClick, onTrashClick }) {\r\n\r\n    function handleClick() {\r\n        onCardClick(card);\r\n    }\r\n\r\n    return (\r\n        <li className=\"photo-place__element\">\r\n            <button type=\"button\" className=\"photo-place__trash\" onClick={onTrashClick}></button>\r\n            <img src={card.src} alt={card.alt} className=\"photo-place__image\" onClick={handleClick}/>\r\n            <div className=\"photo-place__group\">\r\n                <h2 className=\"photo-place__title\">{card.title}</h2>\r\n                <div className=\"photo-place__group-like\">\r\n                    <button type=\"button\" className=\"photo-place__like\"></button>\r\n                    <p className=\"photo-place__number-likes\"></p>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport PencilAvatar from '../images/pencil-avatar.svg';\r\nimport UserAvatar from '../images/iv-custo.jpg'\r\nimport { api } from '../utils/api.js'\r\nimport Card from '../components/Card'\r\n\r\n\r\nfunction Main({ onEditProfile, onAddPlace, onEditAvatar, onCardClick, onTrashClick }) {\r\n    const [userName, setUserName] = React.useState('Жак-Ив Кусто');\r\n    const [userDescription, setUserDescription] = React.useState('Исследователь океана');\r\n    const [userAvatar, setUserAvatar] = React.useState(UserAvatar);\r\n    const [cards, setCards] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        api\r\n            .getInitialInfo() // Загрузка информации о пользователе.\r\n            .then(([userInfo, initialCards]) => {\r\n                // console.log(userInfo);\r\n                setUserAvatar(userInfo.avatar);\r\n                setUserName(userInfo.name);\r\n                setUserDescription(userInfo.about);\r\n                const items = initialCards.map(item => ({\r\n                    src: item.link,\r\n                    alt: item.name,\r\n                    title: item.name,\r\n                }))\r\n\r\n                setCards(items);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err); // Выведем ошибку в консоль\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile page__container\">\r\n                <div className=\"profile__avatar\" onClick={onEditAvatar} style={{ backgroundImage: `url(${userAvatar})` }} >\r\n                    <img className=\"profile__pencil\" src={PencilAvatar} alt=\"Значок редактирования профиля\" />\r\n                </div>\r\n                <div className=\"profile__info\">\r\n                    <div className=\"profile__name-container\">\r\n                        <h1 className=\"profile__name\">{userName}</h1>\r\n                        <button type=\"button\" className=\"profile__editbutton\" onClick={onEditProfile}></button>\r\n                    </div>\r\n                    <p className=\"profile__job\">{userDescription}</p>\r\n                </div>\r\n                <button type=\"button\" className=\"profile__addbutton\" onClick={onAddPlace}></button>\r\n            </section>\r\n\r\n            <section className=\"photo-place page__container\">\r\n                <ul className=\"photo-place__elements\">\r\n                    {cards.map((card, i) => <Card key={i} card={card} onCardClick={onCardClick} onTrashClick={onTrashClick}/>)}\r\n                </ul>\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer page__container\">\r\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;       ","import React from 'react';\r\n\r\n\r\nfunction PopupWithForm({ title, name, isOpen, loader, onClose, children }) {\r\n    return (\r\n        <div className={isOpen ? `popup__container popup__container-form popup__container_${name} popup__container_opened ` :\r\n            `popup__container popup__container-form popup__container_${name}`}>\r\n            <form name={`form-${name}`} action=\"#\" method=\"post\" className={`popup__form popup__form_${name}`} noValidate>\r\n                <h3 className=\"popup__form-heading\">{title}</h3>\r\n                {children}\r\n                <button className={`popup__button popup__button-text popup__button_save-${name}`} type=\"submit\">\r\n                    {loader}\r\n                </button>\r\n            </form>\r\n            <button type=\"button\" className={`popup__close popup__close_container-${name}`} onClick={onClose}></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\n\r\nfunction ImagePopup({ card, onClose }) {\r\n    \r\n    return (\r\n        <div className={card ? 'popup__container popup__container-view popup__container_opened'\r\n            : 'popup__container popup__container-view'}>\r\n            <figure className=\"popup__view\">\r\n                <img className=\"popup__image\" src={card.src} alt={card.alt}/>\r\n                <figcaption className=\"popup__caption\">{card.title}</figcaption>\r\n            </figure>\r\n            <button type=\"button\" className=\"popup__close popup__close_view\" onClick={onClose} ></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;   ","import React from 'react';\r\n\r\nfunction Loader() {\r\n    return (\r\n        <>\r\n            <p className=\"popup__button-text popup__button-save\">Сохранить</p>\r\n            <p className=\"popup__button-text popup__button-saving popup__button-text_disabled\">Сохранение...</p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Loader;   ","import React from 'react';\r\nimport Header from '../components/Header';\r\nimport Main from '../components/Main';\r\nimport Footer from '../components/Footer';\r\nimport PopupWithForm from '../components/PopupWithForm';\r\nimport ImagePopup from '../components/ImagePopup';\r\nimport Loader from '../components/Loader';\r\n\r\nfunction App(props) {\r\n\r\n  function handleEditAvatarClick() {\r\n    setChangeAvatarPopupOpen(true);\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setEditProfilePopupOpen(true);\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setAddImagePopupOpen(true);\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function handleTrashClick() {\r\n    setTrashPopupOpen(true);\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setChangeAvatarPopupOpen(false);\r\n    setEditProfilePopupOpen(false);\r\n    setAddImagePopupOpen(false);\r\n    setTrashPopupOpen(false);\r\n    setSelectedCard(false);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddImagePopupOpen, setAddImagePopupOpen] = React.useState(false);\r\n  const [isChangeAvatarPopupOpen, setChangeAvatarPopupOpen] = React.useState(false);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState(false);\r\n  const [isTrashPopupOpen, setTrashPopupOpen] = React.useState(false);\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <Header />\r\n      <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick}\r\n      onCardClick={handleCardClick} onTrashClick={handleTrashClick}/>\r\n      <Footer />\r\n      <section className={isEditProfilePopupOpen || isAddImagePopupOpen || isChangeAvatarPopupOpen\r\n        || selectedCard || isTrashPopupOpen ? 'popup popup_opened' : 'popup'}>\r\n        <PopupWithForm title='Редактировать профиль' name='profile' loader={<Loader />}\r\n          isOpen={isEditProfilePopupOpen ?  isOpen  : false} onClose={closeAllPopups}>\r\n          {<fieldset className=\"popup__info\">\r\n            <input className=\"popup__input popup__input_name\" type=\"text\" id=\"name-input\" name=\"name\"\r\n              placeholder=\"Имя\" minLength='2' maxLength=\"40\" required />\r\n            <span id=\"name-input-error\" className=\"popup__error\"></span>\r\n            <input className=\"popup__input popup__input_job\" type=\"text\" id=\"job-input\" name=\"job\"\r\n              placeholder=\"О себе\" minLength=\"2\" maxLength=\"200\" required />\r\n            <span id=\"job-input-error\" className=\"popup__error\"></span>\r\n          </fieldset>}\r\n        </PopupWithForm>\r\n\r\n        <PopupWithForm title='Новое место' name='cards' loader={<Loader />}\r\n          isOpen={isAddImagePopupOpen ? isOpen  : false} onClose={closeAllPopups}>\r\n          {<fieldset className=\"popup__info\">\r\n            <input className=\"popup__input popup__input_card-name\" type=\"text\" id=\"card-input\" name=\"card\"\r\n              placeholder=\"Название\" minLength=\"1\" maxLength=\"30\" required />\r\n            <span id=\"card-input-error\" className=\"popup__error\"></span>\r\n            <input className=\"popup__input popup__input_link\" type=\"url\" id=\"link-input\" name=\"link\"\r\n              placeholder=\"Сссылка на картинку\" required />\r\n            <span id=\"link-input-error\" className=\"popup__error\"></span>\r\n          </fieldset>}\r\n        </PopupWithForm>\r\n\r\n        <PopupWithForm title='Обновить аватар' name='avatar' loader={<Loader />}\r\n          isOpen={isChangeAvatarPopupOpen ? isOpen  : false} onClose={closeAllPopups}>\r\n          {<fieldset className=\"popup__info\">\r\n            <input className=\"popup__input popup__input_avatar\" type=\"url\" id=\"avatar-input\" name=\"avatar\"\r\n              placeholder=\"Ссылка на новый аватар\" required />\r\n            <span id=\"avatar-input-error\" className=\"popup__error\"></span>\r\n          </fieldset>}\r\n        </PopupWithForm>\r\n        \r\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\r\n\r\n        <PopupWithForm title='Вы уверены?' name='trash' loader='Да'\r\n          isOpen={isTrashPopupOpen ? isOpen : false} onClose={closeAllPopups}>\r\n        </PopupWithForm>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}